(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[232],{6321:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/documentation/modules/authorization/nestjs-access-control",function(){return t(6065)}])},250:function(e,n,t){"use strict";var o=t(5893),s={github:"https://github.com/conceptadev/rockets",docsRepositoryBase:"https://github.com/conceptadev/rockets/blob/main",search:!0,titleSuffix:" \u2013 Rockets",floatTOC:!0,logo:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("img",{className:"md:inline object-contain hidden",height:16,width:16,alt:"Rockets Logo",src:"/assets/rockets-icon.svg"}),(0,o.jsx)("span",{className:"mr-2 font-extrabold mx-2 hidden md:inline",children:"Rockets"})]}),head:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("meta",{name:"msapplication-TileColor",content:"#ffffff"}),(0,o.jsx)("meta",{name:"theme-color",content:"#ffffff"}),(0,o.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),(0,o.jsx)("meta",{httpEquiv:"Content-Language",content:"en"}),(0,o.jsx)("meta",{name:"description",content:"Rockets: Rapid Enterprise Development Toolkit"}),(0,o.jsx)("meta",{name:"og:description",content:"Rockets: Rapid Enterprise Development Toolkit"}),(0,o.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,o.jsx)("meta",{name:"twitter:image",content:"https://www.rockets.tools/og.png"}),(0,o.jsx)("meta",{name:"twitter:site:domain",content:"rockets.tools"}),(0,o.jsx)("meta",{name:"twitter:url",content:"https://www.rockets.tools"}),(0,o.jsx)("meta",{name:"og:title",content:"Rockets: Rapid Enterprise Development Toolkit"}),(0,o.jsx)("meta",{name:"og:image",content:"https://www.rockets.tools/og.png"}),(0,o.jsx)("meta",{name:"apple-mobile-web-app-title",content:"Rockets"}),(0,o.jsx)("link",{rel:"apple-touch-icon",sizes:"180x180",href:"/apple-icon-180x180.png"}),(0,o.jsx)("link",{rel:"icon",type:"image/png",sizes:"192x192",href:"/android-icon-192x192.png"}),(0,o.jsx)("link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon-32x32.png"}),(0,o.jsx)("link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon-16x16.png"}),(0,o.jsx)("link",{rel:"manifest",href:"/site.webmanifest"}),(0,o.jsx)("meta",{name:"msapplication-TileImage",content:"/ms-icon-150x150.png"})]}),prevLinks:!0,nextLinks:!0,footer:!0,footerEditLink:"Edit this page on GitHub",footerText:(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("span",{children:["2022 \xa9 ",(0,o.jsx)("a",{href:"https://conceptatech.com",target:"_blank",rel:"noreferrer",children:" Concepta"})]})}),unstable_faviconGlyph:"\ud83d\udc4b"};n.Z=s},6065:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return d}});var o=t(5893),s=t(7479),r=t(3805),a=t(250),i=t(1151);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},o=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),o.forEach((function(n){c(e,n,t[n])}))}return e}function u(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=function(){var n=Object.assign({h1:"h1",p:"p",h2:"h2",code:"code",blockquote:"blockquote",ul:"ul",li:"li",h3:"h3",pre:"pre"},(0,i.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{children:"Rockets NestJS Access Control"}),"\n",(0,o.jsx)(n.p,{children:"Advanced access control guard for NestJS with optional per-request filtering."}),"\n",(0,o.jsx)(n.h2,{children:"Installation"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"yarn add @concepta/nestjs-access-control"})}),"\n",(0,o.jsx)(n.h2,{children:"IMPORTANT"}),"\n",(0,o.jsx)(n.p,{children:"When building your ACL, you need to remember these!"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"This module only helps you apply a pattern. There is no magic, you are ultimately responsible for\nchecking that your ACL works in all contexts."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Here is the pattern:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Giving ",(0,o.jsx)(n.code,{children:"any"})," access implies that the role IS NOT restricted by ownership, or other rules, to that action/resource combination."]}),"\n",(0,o.jsxs)(n.li,{children:["Giving ",(0,o.jsx)(n.code,{children:"own"})," access implies that the role IS restricted by ownership to that action/resource combination\n(it is often required to enforce this rule with a filter to check the data layer when not all information required to\ncheck ownership exists in the parameters or query string.)"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"!!! Important !!!"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["All roles that are given ",(0,o.jsx)(n.code,{children:"any"})," access to a resource will NOT be passed through access filters since ",(0,o.jsx)(n.code,{children:"any"})," implies they should have all access."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{children:"Example"}),"\n",(0,o.jsx)(n.p,{children:"These are very rough examples. We intend to improve them ASAP."}),"\n",(0,o.jsx)(n.h3,{children:"Simple User Entity"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Entity, Column, ManyToMany, Unique } from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { Role } from '../auth/role.entity';\n\n@Entity()\n@Unique(['username'])\nexport class User {\n  @Column()\n  username!: string;\n\n  @Column()\n  @Exclude()\n  password!: string;\n\n  @Column()\n  @Exclude()\n  salt!: string;\n\n  @ManyToMany(() => Role, (role) => role.users, {\n    eager: true,\n    onDelete: 'CASCADE',\n  })\n  roles!: Role[];\n}\n"})}),"\n",(0,o.jsx)(n.h3,{children:"Your custom AccessControlService"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { AccessControlService } from 'nestjs-access-control';\nimport { ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { User } from '../user/user.entity';\n\nexport class ACService implements AccessControlService {\n  async getUser<T>(context: ExecutionContext): Promise<T> {\n    const request = context.switchToHttp().getRequest();\n    return request.user as T;\n  }\n  async getUserRoles(context: ExecutionContext): Promise<string | string[]> {\n    const user = await this.getUser<User>(context);\n    if (!user || !user.roles) throw new UnauthorizedException();\n    return user.roles.map((role) => role.name);\n  }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{children:"Your custom ACL rules"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { AccessControl } from 'accesscontrol';\n\nexport enum AppRole {\n  SuperAdmin = 'SuperAdmin',\n  User = 'User',\n}\n\nexport enum AppResource {\n  User = 'user',\n  UserList = 'user-list',\n}\n\nconst allResources = Object.values(AppResource);\nconst allRoles = Object.values(AppRole);\n\nexport const acRules: AccessControl = new AccessControl();\n\n// admins can do whatever they want\nacRules\n  .grant([AppRole.SuperAdmin])\n  .resource(allResources)\n  .createOwn()\n  .createAny()\n  .readOwn()\n  .readAny()\n  .updateOwn()\n  .updateAny()\n  .deleteOwn()\n  .deleteAny();\n\n// regular users can read self\nacRules.grant(AppRole.User).resource([AppResource.User]).readOwn();\n\n// make sure nobody can delete themselves\nacRules.deny(allRoles).resource(AppResource.User).deleteOwn();\n"})}),"\n",(0,o.jsx)(n.h3,{children:"Import the module into your app"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AccessControlModule } from 'nestjs-access-control';\nimport { ACService } from './modules/auth/access-control.service';\nimport { acRules } from './app.acl';\n\n@Module({\n  imports: [\n    // ...\n    AccessControlModule.register({ service: ACService, rules: acRules }),\n    // ...\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n"})}),"\n",(0,o.jsx)(n.h3,{children:"Implement on your controller (nestjsx CRUD module with Passport guard example)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Controller, UseGuards } from '@nestjs/common';\nimport { Crud, CrudController } from '@nestjsx/crud';\nimport { User } from './user.entity';\nimport { UserService } from './user.service';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AppResource } from '../../app.acl';\nimport {\n  AccessControlCreateOne,\n  AccessControlDeleteOne,\n  AccessControlGuard,\n  AccessControlReadMany,\n  AccessControlReadOne,\n  AccessControlUpdateOne,\n  UseAccessControl,\n} from '@concepta/nestjs-access-control';\nimport { UserDto, CreateUserDto, UpdateUserDto } from './dto';\nimport { UserAccessControlFilterService } from './user-access-control-filter.service';\n\n@ApiTags(AppResource.User)\n@ApiBearerAuth()\n@Crud({\n  model: {\n    type: UserDto,\n  },\n  dto: {\n    create: CreateUserDto,\n    update: UpdateUserDto,\n  },\n  routes: {\n    only: [\n      'getManyBase',\n      'getOneBase',\n      'createOneBase',\n      'updateOneBase',\n      'deleteOneBase',\n    ],\n    getManyBase: {\n      decorators: [\n        ApiOperation({\n          operationId: 'user_getMany',\n        }),\n        AccessControlReadMany(AppResource.UserList),\n      ],\n    },\n    getOneBase: {\n      decorators: [\n        ApiOperation({\n          operationId: 'user_getOne',\n        }),\n        AccessControlReadOne(\n          AppResource.User,\n          async (\n            params: { id: string },\n            user: User,\n            service: UserAccessControlFilterService,\n          ): Promise<boolean> => {\n            return (\n              params.id === user.id && true === service.userCanRead(id, user)\n            );\n          },\n        ),\n      ],\n    },\n    createOneBase: {\n      decorators: [\n        ApiOperation({\n          operationId: 'user_createOne',\n        }),\n        AccessControlCreateOne(AppResource.User),\n      ],\n    },\n    updateOneBase: {\n      decorators: [\n        ApiOperation({\n          operationId: 'user_updateOne',\n        }),\n        AccessControlUpdateOne(AppResource.User),\n      ],\n    },\n    deleteOneBase: {\n      decorators: [\n        ApiOperation({\n          operationId: 'user_deleteOne',\n        }),\n        AccessControlDeleteOne(AppResource.User),\n      ],\n    },\n  },\n})\n@Controller(AppResource.User)\n@UseGuards(AuthGuard(), AccessControlGuard)\n@UseAccessControl({ service: UserAccessControlFilterService })\nexport class UserController implements CrudController<User> {\n  constructor(public service: UserService) {}\n}\n"})})]})},t=Object.assign({},(0,i.ah)(),e.components),s=t.wrapper;return s?(0,o.jsx)(s,l({},e,{children:(0,o.jsx)(n,{})})):n()}var m=(0,o.jsx)(u,{});function d(e){return(0,r.withSSG)((0,s.Z)({filename:"nestjs-access-control.md",route:"/documentation/modules/authorization/nestjs-access-control",meta:{},pageMap:[{name:"documentation",children:[{name:"getting-started",route:"/documentation/getting-started",frontMatter:{title:"Getting Started"}},{name:"meta.json",meta:{"getting-started":"Getting Started",modules:{title:"Modules"}}},{name:"modules",children:[{name:"authentication",children:[{name:"meta.json",meta:{"nestjs-auth-github":{title:"GitHub Login"},"nestjs-auth-local":{title:"Local Login"},"nestjs-auth-refresh":{title:"Refresh Token"},"nestjs-authentication":{title:"Authentication"}}},{name:"nestjs-auth-github",route:"/documentation/modules/authentication/nestjs-auth-github"},{name:"nestjs-auth-local",route:"/documentation/modules/authentication/nestjs-auth-local"},{name:"nestjs-auth-refresh",route:"/documentation/modules/authentication/nestjs-auth-refresh"},{name:"nestjs-authentication",route:"/documentation/modules/authentication/nestjs-authentication"}],route:"/documentation/modules/authentication"},{name:"authorization",children:[{name:"meta.json",meta:{"nestjs-access-control":{title:"Access Control"},"nestjs-auth-jwt":{title:"Access Token"}}},{name:"nestjs-access-control",route:"/documentation/modules/authorization/nestjs-access-control"},{name:"nestjs-auth-jwt",route:"/documentation/modules/authorization/nestjs-auth-jwt"}],route:"/documentation/modules/authorization"},{name:"controller",children:[{name:"meta.json",meta:{"nestjs-crud":{title:"CRUD"},"nestjs-swagger-ui":{title:"Swagger UI"}}},{name:"nestjs-crud",route:"/documentation/modules/controller/nestjs-crud"},{name:"nestjs-swagger-ui",route:"/documentation/modules/controller/nestjs-swagger-ui"}],route:"/documentation/modules/controller"},{name:"core",children:[{name:"meta.json",meta:{"nestjs-common":{title:"Common"},"nestjs-event":{title:"Events"},"nestjs-exception":{title:"Exceptions"},"nestjs-typeorm-ext":{title:"TypeORM Ext"}}},{name:"nestjs-common",route:"/documentation/modules/core/nestjs-common"},{name:"nestjs-event",route:"/documentation/modules/core/nestjs-event"},{name:"nestjs-exception",route:"/documentation/modules/core/nestjs-exception"},{name:"nestjs-typeorm-ext",route:"/documentation/modules/core/nestjs-typeorm-ext"}],route:"/documentation/modules/core"},{name:"meta.json",meta:{core:"Core",authentication:"Authentication",authorization:"Authorization",model:"Model",controller:"Controller",notification:"Notification",util:"Utilities"}},{name:"model",children:[{name:"meta.json",meta:{"nestjs-user":{title:"User"}}},{name:"nestjs-user",route:"/documentation/modules/model/nestjs-user"}],route:"/documentation/modules/model"},{name:"notification",children:[{name:"meta.json",meta:{"nestjs-email":{title:"Email"}}},{name:"nestjs-email",route:"/documentation/modules/notification/nestjs-email"}],route:"/documentation/modules/notification"},{name:"util",children:[{name:"meta.json",meta:{"nestjs-jwt":{title:"JWT"},"nestjs-logger":{title:"Logger"},"nestjs-password":{title:"Password"}}},{name:"nestjs-jwt",route:"/documentation/modules/util/nestjs-jwt"},{name:"nestjs-logger",route:"/documentation/modules/util/nestjs-logger"},{name:"nestjs-password",route:"/documentation/modules/util/nestjs-password"}],route:"/documentation/modules/util"}],route:"/documentation/modules"}],route:"/documentation"},{name:"index",route:"/",frontMatter:{title:"Rockets - Rapid Enterprise Development Toolkit"}},{name:"meta.json",meta:{index:{title:"Introduction",type:"nav",hidden:!0},documentation:{title:"Documentation",type:"nav"}}}]},a.Z))(l({},e,{children:m}))}}},function(e){e.O(0,[872,774,888,179],(function(){return n=6321,e(e.s=n);var n}));var n=e.O();_N_E=n}]);